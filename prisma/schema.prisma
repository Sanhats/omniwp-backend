// ----------------------
// Prisma + MongoDB Setup
// ----------------------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// ----------------------
// Models
// ----------------------

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  password  String    // hashed with bcrypt
  clients   Client[]
  orders    Order[]
  messages  Message[]
  templates Template[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Client {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  name      String
  phone     String
  email     String?   // para env√≠o de emails
  notes     String?
  orders    Order[]
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  clientId    String    @db.ObjectId
  client      Client    @relation(fields: [clientId], references: [id])
  description String
  status      String    // ejemplo: "pendiente", "confirmado", "entregado"
  messages    Message[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// ----------------------
// Twilio Communication Models
// ----------------------

model Message {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  user              User     @relation(fields: [userId], references: [id])
  clientId          String?  @db.ObjectId
  client            Client?  @relation(fields: [clientId], references: [id])
  orderId           String?  @db.ObjectId
  order             Order?   @relation(fields: [orderId], references: [id])
  channel           String   // "whatsapp" | "email"
  direction         String   // "outbound" | "inbound"
  provider          String   // "twilio"
  providerMessageId String?
  templateType      String?
  variables         Json?
  subject           String?  // solo email
  text              String
  status            String   // "queued","sent","delivered","read","failed"
  errorCode         String?
  errorMessage      String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Template {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id])
  channel      String   // "whatsapp" | "email"
  name         String
  content      String   // body con placeholders
  placeholders String[] // array de placeholders disponibles
  status       String   // "draft","approved"
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
